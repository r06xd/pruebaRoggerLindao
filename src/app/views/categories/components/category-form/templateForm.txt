<form class="max-w-sm mx-auto dark:bg-slate-700 px-1 py-2 rounded-md">
  valor de variable = {{ edad }}
  <br />
  valor de objeto = {{ persona | json }}

  <div class="mb-5">
    <label
      for="email"
      class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
      >Your email</label
    >
    <input
      type="text"
      id="text"
      [(ngModel)]="persona.name"
      name="name"
      class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
      placeholder="name@flowbite.com"
      (ngModelChange)="hearChangePerson($event)"
    />
    <p class="text-red-500 text-xs italic">Please fill out this field.</p>
  </div>
  <div class="mb-5">
    <label
      for="password"
      class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
      >Your password</label
    >
    <input
      type="number"
      id="number"
      [(ngModel)]="edad"
      name="edad"
      class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
    />
  </div>
  <div class="flex items-start mb-5">
    <div class="flex items-center h-5">
      <input
        id="remember"
        type="checkbox"
        value=""
        class="w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-blue-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800"
      />
    </div>
    <label
      for="remember"
      class="ms-2 text-sm font-medium text-gray-900 dark:text-gray-300"
      >Remember me</label
    >
  </div>
  <button
    type="submit"
    class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
    (click)="saveData()"
  >
    Submit
  </button>
</form>















import { CommonModule } from '@angular/common';
import { Component, EventEmitter, Output } from '@angular/core';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'category-form',
  standalone: true,
  imports: [CommonModule, FormsModule],
  templateUrl: './category-form.component.html',
  styleUrl: './category-form.component.scss'
})
export class CategoryFormComponent {
  @Output() hide: EventEmitter<boolean> = new EventEmitter<boolean>();

  edad: number = 0;
  persona: { name: string } = {
    name: 'Pedro'
  };

  hearChangePerson($event: unknown): void {
    console.log($event);
  }


  saveData(): void {


    this.hide.emit(true);
  }
}




  validate(): void {
    console.log('start validate 1');
    of(true)
      .pipe(delay(3000))
      .subscribe(() => { console.log('termino de validar validate1'); });
    console.log('end validate 1');
  }

  async validacion2(): Promise<void> {
    console.log('start validando 2');
    const respuesta = await new Promise(
      (resolve) => {
        setTimeout(
          () => {
            console.log('validacion2');
            return resolve(5);
          },
          3000
        );
      }
    );
    console.log('end validar2 ' + respuesta);
  }
